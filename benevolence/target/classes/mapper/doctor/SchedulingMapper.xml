<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.benevolence.doctor.mapper.SchedulingMapper">
  <resultMap id="BaseResultMap" type="cn.benevolence.doctor.model.Scheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="docid" jdbcType="INTEGER" property="docid" />
    <result column="sn" jdbcType="INTEGER" property="sn" />
    <result column="climit" jdbcType="INTEGER" property="climit" />
    <result column="sdate" jdbcType="DATE" property="sdate" />
    <result column="backgroundColor" jdbcType="VARCHAR" property="backgroundcolor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, docid, sn, climit, sdate, backgroundColor
  </sql>
  <select id="selectByExample" parameterType="cn.benevolence.doctor.model.SchedulingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doc_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from doc_scheduling
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from doc_scheduling
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.benevolence.doctor.model.SchedulingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from doc_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.benevolence.doctor.model.Scheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doc_scheduling (docid, sn, climit, 
      sdate, backgroundColor)
    values (#{docid,jdbcType=INTEGER}, #{sn,jdbcType=INTEGER}, #{climit,jdbcType=INTEGER}, 
      #{sdate,jdbcType=DATE}, #{backgroundcolor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.benevolence.doctor.model.Scheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doc_scheduling
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="docid != null">
        docid,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="climit != null">
        climit,
      </if>
      <if test="sdate != null">
        sdate,
      </if>
      <if test="backgroundcolor != null">
        backgroundColor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="docid != null">
        #{docid,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=INTEGER},
      </if>
      <if test="climit != null">
        #{climit,jdbcType=INTEGER},
      </if>
      <if test="sdate != null">
        #{sdate,jdbcType=DATE},
      </if>
      <if test="backgroundcolor != null">
        #{backgroundcolor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.benevolence.doctor.model.SchedulingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from doc_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update doc_scheduling
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.docid != null">
        docid = #{record.docid,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=INTEGER},
      </if>
      <if test="record.climit != null">
        climit = #{record.climit,jdbcType=INTEGER},
      </if>
      <if test="record.sdate != null">
        sdate = #{record.sdate,jdbcType=DATE},
      </if>
      <if test="record.backgroundcolor != null">
        backgroundColor = #{record.backgroundcolor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update doc_scheduling
    set id = #{record.id,jdbcType=INTEGER},
      docid = #{record.docid,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=INTEGER},
      climit = #{record.climit,jdbcType=INTEGER},
      sdate = #{record.sdate,jdbcType=DATE},
      backgroundColor = #{record.backgroundcolor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.benevolence.doctor.model.Scheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update doc_scheduling
    <set>
      <if test="docid != null">
        docid = #{docid,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=INTEGER},
      </if>
      <if test="climit != null">
        climit = #{climit,jdbcType=INTEGER},
      </if>
      <if test="sdate != null">
        sdate = #{sdate,jdbcType=DATE},
      </if>
      <if test="backgroundcolor != null">
        backgroundColor = #{backgroundcolor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.benevolence.doctor.model.Scheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update doc_scheduling
    set docid = #{docid,jdbcType=INTEGER},
      sn = #{sn,jdbcType=INTEGER},
      climit = #{climit,jdbcType=INTEGER},
      sdate = #{sdate,jdbcType=DATE},
      backgroundColor = #{backgroundcolor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>